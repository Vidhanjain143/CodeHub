"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/problems/[pid]",{

/***/ "./src/utils/problems/two-sum.ts":
/*!***************************************!*\
  !*** ./src/utils/problems/two-sum.ts ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"twoSum\": function() { return /* binding */ twoSum; }\n/* harmony export */ });\n/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! assert */ \"./node_modules/assert/build/assert.js\");\n/* harmony import */ var assert__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(assert__WEBPACK_IMPORTED_MODULE_0__);\n\nconst starterCodeTwoSum = \"function twoSum(nums,target){\\n  // Write your code here\\n};\";\n// checks if the user has the correct code\nconst handlerTwoSum = (fn)=>{\n    // fn is the callback that user's code is passed into\n    try {\n        const nums = [\n            [\n                2,\n                7,\n                11,\n                15\n            ],\n            [\n                3,\n                2,\n                4\n            ],\n            [\n                3,\n                3\n            ]\n        ];\n        const targets = [\n            9,\n            6,\n            6\n        ];\n        const answers = [\n            [\n                0,\n                1\n            ],\n            [\n                1,\n                2\n            ],\n            [\n                0,\n                1\n            ]\n        ];\n        // loop all tests to check if the user's code is correct\n        for(let i = 0; i < nums.length; i++){\n            // result is the output of the user's function and answer is the expected output\n            const result = fn(nums[i], targets[i]);\n            assert__WEBPACK_IMPORTED_MODULE_0___default().deepStrictEqual(result, answers[i]);\n        }\n        return true;\n    } catch (error) {\n        console.log(\"twoSum handler function error\");\n        throw new Error(error);\n    }\n};\nconst twoSum = {\n    id: \"two-sum\",\n    title: \"1. Two Sum\",\n    problemStatement: \"<p class='mt-3'>\\n  Given an array of integers <code>nums</code> and an integer <code>target</code>, return\\n  <em>indices of the two numbers such that they add up to</em> <code>target</code>.\\n</p>\\n<p class='mt-3'>\\n  You may assume that each input would have <strong>exactly one solution</strong>, and you\\n  may not use thesame element twice.\\n</p>\\n<p class='mt-3'>You can return the answer in any order.</p>\",\n    examples: [\n        {\n            id: 1,\n            inputText: \"nums = [2,7,11,15], target = 9\",\n            outputText: \"[0,1]\",\n            explanation: \"Because nums[0] + nums[1] == 9, we return [0, 1].\"\n        },\n        {\n            id: 2,\n            inputText: \"nums = [3,2,4], target = 6\",\n            outputText: \"[1,2]\",\n            explanation: \"Because nums[1] + nums[2] == 6, we return [1, 2].\"\n        },\n        {\n            id: 3,\n            inputText: \" nums = [3,3], target = 6\",\n            outputText: \"[0,1]\"\n        }\n    ],\n    constraints: \"<li class='mt-2'>\\n  <code>2 ≤ nums.length ≤ 10</code>\\n</li> <li class='mt-2'>\\n<code>-10 ≤ nums[i] ≤ 10</code>\\n</li> <li class='mt-2'>\\n<code>-10 ≤ target ≤ 10</code>\\n</li>\\n<li class='mt-2 text-sm'>\\n<strong>Only one valid answer exists.</strong>\\n</li>\",\n    handlerFunction: handlerTwoSum,\n    starterCode: starterCodeTwoSum,\n    order: 1,\n    starterFunctionName: \"function twoSum(\"\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvcHJvYmxlbXMvdHdvLXN1bS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEI7QUFHNUIsTUFBTUMsb0JBQXFCO0FBSTNCLDBDQUEwQztBQUMxQyxNQUFNQyxnQkFBZ0IsQ0FBQ0M7SUFDdEIscURBQXFEO0lBQ3JELElBQUk7UUFDSCxNQUFNQyxPQUFPO1lBQ1o7Z0JBQUM7Z0JBQUc7Z0JBQUc7Z0JBQUk7YUFBRztZQUNkO2dCQUFDO2dCQUFHO2dCQUFHO2FBQUU7WUFDVDtnQkFBQztnQkFBRzthQUFFO1NBQ047UUFFRCxNQUFNQyxVQUFVO1lBQUM7WUFBRztZQUFHO1NBQUU7UUFDekIsTUFBTUMsVUFBVTtZQUNmO2dCQUFDO2dCQUFHO2FBQUU7WUFDTjtnQkFBQztnQkFBRzthQUFFO1lBQ047Z0JBQUM7Z0JBQUc7YUFBRTtTQUNOO1FBRUQsd0RBQXdEO1FBQ3hELElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJSCxLQUFLSSxRQUFRRCxJQUFLO1lBQ3JDLGdGQUFnRjtZQUNoRixNQUFNRSxTQUFTTixHQUFHQyxJQUFJLENBQUNHLEVBQUUsRUFBRUYsT0FBTyxDQUFDRSxFQUFFO1lBQ3JDUCw2REFBc0JVLENBQUNELFFBQVFILE9BQU8sQ0FBQ0MsRUFBRTtRQUMxQztRQUNBLE9BQU87SUFDUixFQUFFLE9BQU9JLE9BQVk7UUFDcEJDLFFBQVFDLElBQUk7UUFDWixNQUFNLElBQUlDLE1BQU1IO0lBQ2pCO0FBQ0Q7QUFFTyxNQUFNSSxTQUFrQjtJQUM5QkMsSUFBSTtJQUNKQyxPQUFPO0lBQ1BDLGtCQUFtQjtJQVNuQkMsVUFBVTtRQUNUO1lBQ0NILElBQUk7WUFDSkksV0FBVztZQUNYQyxZQUFZO1lBQ1pDLGFBQWE7UUFDZDtRQUNBO1lBQ0NOLElBQUk7WUFDSkksV0FBVztZQUNYQyxZQUFZO1lBQ1pDLGFBQWE7UUFDZDtRQUNBO1lBQ0NOLElBQUk7WUFDSkksV0FBVztZQUNYQyxZQUFZO1FBQ2I7S0FDQTtJQUNERSxhQUFjO0lBVWRDLGlCQUFpQnRCO0lBQ2pCdUIsYUFBYXhCO0lBQ2J5QixPQUFPO0lBQ1BDLHFCQUFxQjtBQUN0QixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy91dGlscy9wcm9ibGVtcy90d28tc3VtLnRzPzQwZTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFzc2VydCBmcm9tIFwiYXNzZXJ0XCI7XHJcbmltcG9ydCB7IFByb2JsZW0gfSBmcm9tIFwiLi4vdHlwZXMvUHJvYmxlbVwiO1xyXG5cclxuY29uc3Qgc3RhcnRlckNvZGVUd29TdW0gPSBgZnVuY3Rpb24gdHdvU3VtKG51bXMsdGFyZ2V0KXtcclxuICAvLyBXcml0ZSB5b3VyIGNvZGUgaGVyZVxyXG59O2A7XHJcblxyXG4vLyBjaGVja3MgaWYgdGhlIHVzZXIgaGFzIHRoZSBjb3JyZWN0IGNvZGVcclxuY29uc3QgaGFuZGxlclR3b1N1bSA9IChmbjogYW55KSA9PiB7XHJcblx0Ly8gZm4gaXMgdGhlIGNhbGxiYWNrIHRoYXQgdXNlcidzIGNvZGUgaXMgcGFzc2VkIGludG9cclxuXHR0cnkge1xyXG5cdFx0Y29uc3QgbnVtcyA9IFtcclxuXHRcdFx0WzIsIDcsIDExLCAxNV0sXHJcblx0XHRcdFszLCAyLCA0XSxcclxuXHRcdFx0WzMsIDNdLFxyXG5cdFx0XTtcclxuXHJcblx0XHRjb25zdCB0YXJnZXRzID0gWzksIDYsIDZdO1xyXG5cdFx0Y29uc3QgYW5zd2VycyA9IFtcclxuXHRcdFx0WzAsIDFdLFxyXG5cdFx0XHRbMSwgMl0sXHJcblx0XHRcdFswLCAxXSxcclxuXHRcdF07XHJcblxyXG5cdFx0Ly8gbG9vcCBhbGwgdGVzdHMgdG8gY2hlY2sgaWYgdGhlIHVzZXIncyBjb2RlIGlzIGNvcnJlY3RcclxuXHRcdGZvciAobGV0IGkgPSAwOyBpIDwgbnVtcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHQvLyByZXN1bHQgaXMgdGhlIG91dHB1dCBvZiB0aGUgdXNlcidzIGZ1bmN0aW9uIGFuZCBhbnN3ZXIgaXMgdGhlIGV4cGVjdGVkIG91dHB1dFxyXG5cdFx0XHRjb25zdCByZXN1bHQgPSBmbihudW1zW2ldLCB0YXJnZXRzW2ldKTtcclxuXHRcdFx0YXNzZXJ0LmRlZXBTdHJpY3RFcXVhbChyZXN1bHQsIGFuc3dlcnNbaV0pO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHRydWU7XHJcblx0fSBjYXRjaCAoZXJyb3I6IGFueSkge1xyXG5cdFx0Y29uc29sZS5sb2coXCJ0d29TdW0gaGFuZGxlciBmdW5jdGlvbiBlcnJvclwiKTtcclxuXHRcdHRocm93IG5ldyBFcnJvcihlcnJvcik7XHJcblx0fVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHR3b1N1bTogUHJvYmxlbSA9IHtcclxuXHRpZDogXCJ0d28tc3VtXCIsXHJcblx0dGl0bGU6IFwiMS4gVHdvIFN1bVwiLFxyXG5cdHByb2JsZW1TdGF0ZW1lbnQ6IGA8cCBjbGFzcz0nbXQtMyc+XHJcbiAgR2l2ZW4gYW4gYXJyYXkgb2YgaW50ZWdlcnMgPGNvZGU+bnVtczwvY29kZT4gYW5kIGFuIGludGVnZXIgPGNvZGU+dGFyZ2V0PC9jb2RlPiwgcmV0dXJuXHJcbiAgPGVtPmluZGljZXMgb2YgdGhlIHR3byBudW1iZXJzIHN1Y2ggdGhhdCB0aGV5IGFkZCB1cCB0bzwvZW0+IDxjb2RlPnRhcmdldDwvY29kZT4uXHJcbjwvcD5cclxuPHAgY2xhc3M9J210LTMnPlxyXG4gIFlvdSBtYXkgYXNzdW1lIHRoYXQgZWFjaCBpbnB1dCB3b3VsZCBoYXZlIDxzdHJvbmc+ZXhhY3RseSBvbmUgc29sdXRpb248L3N0cm9uZz4sIGFuZCB5b3VcclxuICBtYXkgbm90IHVzZSB0aGVzYW1lIGVsZW1lbnQgdHdpY2UuXHJcbjwvcD5cclxuPHAgY2xhc3M9J210LTMnPllvdSBjYW4gcmV0dXJuIHRoZSBhbnN3ZXIgaW4gYW55IG9yZGVyLjwvcD5gLFxyXG5cdGV4YW1wbGVzOiBbXHJcblx0XHR7XHJcblx0XHRcdGlkOiAxLFxyXG5cdFx0XHRpbnB1dFRleHQ6IFwibnVtcyA9IFsyLDcsMTEsMTVdLCB0YXJnZXQgPSA5XCIsXHJcblx0XHRcdG91dHB1dFRleHQ6IFwiWzAsMV1cIixcclxuXHRcdFx0ZXhwbGFuYXRpb246IFwiQmVjYXVzZSBudW1zWzBdICsgbnVtc1sxXSA9PSA5LCB3ZSByZXR1cm4gWzAsIDFdLlwiLFxyXG5cdFx0fSxcclxuXHRcdHtcclxuXHRcdFx0aWQ6IDIsXHJcblx0XHRcdGlucHV0VGV4dDogXCJudW1zID0gWzMsMiw0XSwgdGFyZ2V0ID0gNlwiLFxyXG5cdFx0XHRvdXRwdXRUZXh0OiBcIlsxLDJdXCIsXHJcblx0XHRcdGV4cGxhbmF0aW9uOiBcIkJlY2F1c2UgbnVtc1sxXSArIG51bXNbMl0gPT0gNiwgd2UgcmV0dXJuIFsxLCAyXS5cIixcclxuXHRcdH0sXHJcblx0XHR7XHJcblx0XHRcdGlkOiAzLFxyXG5cdFx0XHRpbnB1dFRleHQ6IFwiIG51bXMgPSBbMywzXSwgdGFyZ2V0ID0gNlwiLFxyXG5cdFx0XHRvdXRwdXRUZXh0OiBcIlswLDFdXCIsXHJcblx0XHR9LFxyXG5cdF0sXHJcblx0Y29uc3RyYWludHM6IGA8bGkgY2xhc3M9J210LTInPlxyXG4gIDxjb2RlPjIg4omkIG51bXMubGVuZ3RoIOKJpCAxMDwvY29kZT5cclxuPC9saT4gPGxpIGNsYXNzPSdtdC0yJz5cclxuPGNvZGU+LTEwIOKJpCBudW1zW2ldIOKJpCAxMDwvY29kZT5cclxuPC9saT4gPGxpIGNsYXNzPSdtdC0yJz5cclxuPGNvZGU+LTEwIOKJpCB0YXJnZXQg4omkIDEwPC9jb2RlPlxyXG48L2xpPlxyXG48bGkgY2xhc3M9J210LTIgdGV4dC1zbSc+XHJcbjxzdHJvbmc+T25seSBvbmUgdmFsaWQgYW5zd2VyIGV4aXN0cy48L3N0cm9uZz5cclxuPC9saT5gLFxyXG5cdGhhbmRsZXJGdW5jdGlvbjogaGFuZGxlclR3b1N1bSxcclxuXHRzdGFydGVyQ29kZTogc3RhcnRlckNvZGVUd29TdW0sXHJcblx0b3JkZXI6IDEsXHJcblx0c3RhcnRlckZ1bmN0aW9uTmFtZTogXCJmdW5jdGlvbiB0d29TdW0oXCIsXHJcbn07Il0sIm5hbWVzIjpbImFzc2VydCIsInN0YXJ0ZXJDb2RlVHdvU3VtIiwiaGFuZGxlclR3b1N1bSIsImZuIiwibnVtcyIsInRhcmdldHMiLCJhbnN3ZXJzIiwiaSIsImxlbmd0aCIsInJlc3VsdCIsImRlZXBTdHJpY3RFcXVhbCIsImVycm9yIiwiY29uc29sZSIsImxvZyIsIkVycm9yIiwidHdvU3VtIiwiaWQiLCJ0aXRsZSIsInByb2JsZW1TdGF0ZW1lbnQiLCJleGFtcGxlcyIsImlucHV0VGV4dCIsIm91dHB1dFRleHQiLCJleHBsYW5hdGlvbiIsImNvbnN0cmFpbnRzIiwiaGFuZGxlckZ1bmN0aW9uIiwic3RhcnRlckNvZGUiLCJvcmRlciIsInN0YXJ0ZXJGdW5jdGlvbk5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utils/problems/two-sum.ts\n"));

/***/ })

});